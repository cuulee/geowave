<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>geowave-parent</artifactId>
		<groupId>mil.nga.giat</groupId>
		<relativePath>../</relativePath>
		<version>0.9.5-SNAPSHOT</version>
	</parent>

	<artifactId>geowave-doc</artifactId>
	<name>GeoWave Documentation</name>
	<packaging>pom</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<asciidoctor.epub.version>1.5.0-alpha.4</asciidoctor.epub.version>
		<asciidoctor.maven.plugin.version>1.5.2.1</asciidoctor.maven.plugin.version>
		<asciidoctorj.pdf.version>1.5.0-alpha.7</asciidoctorj.pdf.version>
		<asciidoctor.pdf.version>1.5.0.alpha.7</asciidoctor.pdf.version>
		<jruby.version>1.7.20.1</jruby.version>
	</properties>

	<repositories>
		<repository>
			<id>rubygems-proxy-releases</id>
			<name>RubyGems.org Proxy (Releases)</name>
			<url>http://rubygems-proxy.torquebox.org/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>rubygems</groupId>
			<artifactId>asciidoctor-pdf</artifactId>
			<version>${asciidoctor.pdf.version}</version>
			<type>gem</type>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>rubygems</groupId>
					<artifactId>asciidoctor</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/content/</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/content/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
							<nonFilteredFileExtensions>
								<nonFilteredFileExtension>js</nonFilteredFileExtension>
								<nonFilteredFileExtension>css</nonFilteredFileExtension>
								<nonFilteredFileExtension>html</nonFilteredFileExtension>
								<nonFilteredFileExtension>eot</nonFilteredFileExtension>
								<nonFilteredFileExtension>svg</nonFilteredFileExtension>
								<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
								<nonFilteredFileExtension>woff</nonFilteredFileExtension>
							</nonFilteredFileExtensions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>generate-devguide</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file" dir="${project.basedir}/content/devguide" includes="*.adoc" />
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file">
									<map from="${project.basedir}/content/devguide/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/devguide/devguide.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-userguide</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file" dir="${project.basedir}/content/userguide" includes="*.adoc" />
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file">
									<map from="${project.basedir}/content/userguide/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/userguide/userguide.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-quickstart</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-quickstart" dir="${project.basedir}/content/quickstart" includes="*.adoc" />
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-quickstart">
									<map from="${project.basedir}/content/quickstart/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/quickstart/quickstart.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>generate-commands</id>
						<phase>generate-sources</phase>
						<configuration>
							<target>
								<fileset id="generate-index-file-commands" dir="${project.basedir}/content/commands" includes="*.adoc" />
								<!-- Abusing this a bit to do some simple templating, I have a file 
									list and need a list of asciidoc includes that look like include::000-titlepage.adoc[] -->
								<pathconvert pathsep="[]${line.separator}" property="asciidoc-files" refid="generate-index-file-commands">
									<map from="${project.basedir}/content/commands/" to="include::" />
								</pathconvert>
								<echo file="${project.build.directory}/content/commands/commands.adoc">${asciidoc-files}[]</echo>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<configuration>
					<doctype>book</doctype>
					<outputDirectory>../target/site</outputDirectory>
					<gemPath>${project.build.directory}/gems-provided</gemPath>
					<attributes>
						<sourcedir>${project.build.sourceDirectory}</sourcedir>
					</attributes>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>pdf</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>${asciidoctorj.pdf.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>generate-pdf-userguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/userguide</sourceDirectory>
									<sourceDocumentName>userguide.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-devguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/devguide</sourceDirectory>
									<sourceDocumentName>devguide.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-quickstart</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart</sourceDirectory>
									<sourceDocumentName>quickstart.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-commands</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/commands</sourceDirectory>
									<sourceDocumentName>commands.adoc</sourceDocumentName>
									<requires>
										<require>asciidoctor-pdf</require>
									</requires>
									<backend>pdf</backend>
									<compact>true</compact>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>epub</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-epub3</artifactId>
								<version>${asciidoctor.epub.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>generate-epub-userguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/userguide</sourceDirectory>
									<sourceDocumentName>userguide.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-devguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/devguide</sourceDirectory>
									<sourceDocumentName>devguide.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-quickstart</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart</sourceDirectory>
									<sourceDocumentName>quickstart.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
							<execution>
								<id>generate-epub-commands</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/commands</sourceDirectory>
									<sourceDocumentName>commands.adoc</sourceDocumentName>
									<backend>epub3</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>html</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-html-userguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/userguide</sourceDirectory>
									<sourceDocumentName>userguide.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<stylesheet>geowave.css</stylesheet>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-devguide</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/devguide</sourceDirectory>
									<sourceDocumentName>devguide.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<stylesheet>geowave.css</stylesheet>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-quickstart</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/quickstart</sourceDirectory>
									<sourceDocumentName>quickstart.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<stylesheet>geowave.css</stylesheet>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-html-commands</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${project.build.directory}/content/commands</sourceDirectory>
									<sourceDocumentName>commands.adoc</sourceDocumentName>
									<backend>html5</backend>
									<sourceHighlighter>highlightjs</sourceHighlighter>
									<attributes>
										<stylesdir>stylesheets</stylesdir>
										<stylesheet>geowave.css</stylesheet>
										<imagesdir>./images</imagesdir>
										<toc>right</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
